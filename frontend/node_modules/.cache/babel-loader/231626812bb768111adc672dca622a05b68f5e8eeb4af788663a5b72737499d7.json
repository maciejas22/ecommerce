{"ast":null,"code":"function map(value, iStart, iStop, oStart, oStop) {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart));\n}\nfunction isNumber(subject) {\n  return typeof subject === 'number';\n}\nfunction isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isRecord(subject) {\n  return isObject(subject) || isArray(subject);\n}\nfunction mathAbs(n) {\n  return Math.abs(n);\n}\nfunction mathSign(n) {\n  return !n ? 0 : n / mathAbs(n);\n}\nfunction deltaAbs(valueB, valueA) {\n  return mathAbs(valueB - valueA);\n}\nfunction factorAbs(valueB, valueA) {\n  if (valueB === 0 || valueA === 0) return 0;\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\n  var diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\n  return mathAbs(diff / valueB);\n}\nfunction roundToDecimals(decimalPoints) {\n  var pow = Math.pow(10, decimalPoints);\n  return function (n) {\n    return Math.round(n * pow) / pow;\n  };\n}\nfunction arrayKeys(array) {\n  return objectKeys(array).map(Number);\n}\nfunction arrayLast(array) {\n  return array[arrayLastIndex(array)];\n}\nfunction arrayLastIndex(array) {\n  return Math.max(0, array.length - 1);\n}\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\nfunction objectsMergeDeep(objectA, objectB) {\n  return [objectA, objectB].reduce(function (mergedObjects, currentObject) {\n    objectKeys(currentObject).forEach(function (key) {\n      var valueA = mergedObjects[key];\n      var valueB = currentObject[key];\n      var areObjects = isObject(valueA) && isObject(valueB);\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\n    });\n    return mergedObjects;\n  }, {});\n}\nfunction objectsAreEqual(objectA, objectB) {\n  var objectAKeys = objectKeys(objectA);\n  var objectBKeys = objectKeys(objectB);\n  if (objectAKeys.length !== objectBKeys.length) return false;\n  return objectAKeys.every(function (key) {\n    var valueA = objectA[key];\n    var valueB = objectB[key];\n    if (typeof valueA === 'function') return \"\".concat(valueA) === \"\".concat(valueB);\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\n    return objectsAreEqual(valueA, valueB);\n  });\n}\nfunction Alignment(align, viewSize) {\n  var predefined = {\n    start: start,\n    center: center,\n    end: end\n  };\n  function start() {\n    return 0;\n  }\n  function center(n) {\n    return end(n) / 2;\n  }\n  function end(n) {\n    return viewSize - n;\n  }\n  function percent() {\n    return viewSize * Number(align);\n  }\n  function measure(n) {\n    if (isNumber(align)) return percent();\n    return predefined[align](n);\n  }\n  var self = {\n    measure: measure\n  };\n  return self;\n}\nfunction Animation(callback) {\n  var animationFrame = 0;\n  function ifAnimating(active, cb) {\n    return function () {\n      if (active === !!animationFrame) cb();\n    };\n  }\n  function start() {\n    animationFrame = window.requestAnimationFrame(callback);\n  }\n  function stop() {\n    window.cancelAnimationFrame(animationFrame);\n    animationFrame = 0;\n  }\n  var self = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop)\n  };\n  return self;\n}\nfunction Axis(axis, direction) {\n  var scroll = axis === 'y' ? 'y' : 'x';\n  var cross = axis === 'y' ? 'x' : 'y';\n  var startEdge = getStartEdge();\n  var endEdge = getEndEdge();\n  function measureSize(rect) {\n    var width = rect.width,\n      height = rect.height;\n    return scroll === 'x' ? width : height;\n  }\n  function getStartEdge() {\n    if (scroll === 'y') return 'top';\n    return direction === 'rtl' ? 'right' : 'left';\n  }\n  function getEndEdge() {\n    if (scroll === 'y') return 'bottom';\n    return direction === 'rtl' ? 'left' : 'right';\n  }\n  var self = {\n    scroll: scroll,\n    cross: cross,\n    startEdge: startEdge,\n    endEdge: endEdge,\n    measureSize: measureSize\n  };\n  return self;\n}\nfunction Limit(min, max) {\n  var length = mathAbs(min - max);\n  function reachedMin(n) {\n    return n < min;\n  }\n  function reachedMax(n) {\n    return n > max;\n  }\n  function reachedAny(n) {\n    return reachedMin(n) || reachedMax(n);\n  }\n  function constrain(n) {\n    if (!reachedAny(n)) return n;\n    return reachedMin(n) ? min : max;\n  }\n  function removeOffset(n) {\n    if (!length) return n;\n    return n - length * Math.ceil((n - max) / length);\n  }\n  var self = {\n    length: length,\n    max: max,\n    min: min,\n    constrain: constrain,\n    reachedAny: reachedAny,\n    reachedMax: reachedMax,\n    reachedMin: reachedMin,\n    removeOffset: removeOffset\n  };\n  return self;\n}\nfunction Counter(max, start, loop) {\n  var _a = Limit(0, max),\n    min = _a.min,\n    constrain = _a.constrain;\n  var loopEnd = max + 1;\n  var counter = withinLimit(start);\n  function withinLimit(n) {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\n  }\n  function get() {\n    return counter;\n  }\n  function set(n) {\n    counter = withinLimit(n);\n    return self;\n  }\n  function add(n) {\n    return set(get() + n);\n  }\n  function clone() {\n    return Counter(max, get(), loop);\n  }\n  var self = {\n    add: add,\n    clone: clone,\n    get: get,\n    set: set,\n    min: min,\n    max: max\n  };\n  return self;\n}\nfunction Direction(direction) {\n  var sign = direction === 'rtl' ? -1 : 1;\n  function apply(n) {\n    return n * sign;\n  }\n  var self = {\n    apply: apply\n  };\n  return self;\n}\nfunction EventStore() {\n  var listeners = [];\n  function add(node, type, handler, options) {\n    if (options === void 0) {\n      options = {\n        passive: true\n      };\n    }\n    node.addEventListener(type, handler, options);\n    listeners.push(function () {\n      return node.removeEventListener(type, handler, options);\n    });\n    return self;\n  }\n  function removeAll() {\n    listeners = listeners.filter(function (remove) {\n      return remove();\n    });\n    return self;\n  }\n  var self = {\n    add: add,\n    removeAll: removeAll\n  };\n  return self;\n}\nfunction Vector1D(value) {\n  var vector = value;\n  function get() {\n    return vector;\n  }\n  function set(n) {\n    vector = readNumber(n);\n    return self;\n  }\n  function add(n) {\n    vector += readNumber(n);\n    return self;\n  }\n  function subtract(n) {\n    vector -= readNumber(n);\n    return self;\n  }\n  function multiply(n) {\n    vector *= n;\n    return self;\n  }\n  function divide(n) {\n    vector /= n;\n    return self;\n  }\n  function normalize() {\n    if (vector !== 0) divide(vector);\n    return self;\n  }\n  function readNumber(n) {\n    return isNumber(n) ? n : n.get();\n  }\n  var self = {\n    add: add,\n    divide: divide,\n    get: get,\n    multiply: multiply,\n    normalize: normalize,\n    set: set,\n    subtract: subtract\n  };\n  return self;\n}\nfunction DragHandler(axis, direction, rootNode, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps) {\n  var crossAxis = axis.cross;\n  var focusNodes = ['INPUT', 'SELECT', 'TEXTAREA'];\n  var nonPassiveEvent = {\n    passive: false\n  };\n  var dragStartPoint = Vector1D(0);\n  var activationEvents = EventStore();\n  var interactionEvents = EventStore();\n  var dragThreshold = percentOfView.measure(20);\n  var snapForceBoost = {\n    mouse: 300,\n    touch: 400\n  };\n  var freeForceBoost = {\n    mouse: 500,\n    touch: 600\n  };\n  var baseSpeed = dragFree ? 5 : 16;\n  var baseMass = 1;\n  var startScroll = 0;\n  var startCross = 0;\n  var pointerIsDown = false;\n  var preventScroll = false;\n  var preventClick = false;\n  var isMouse = false;\n  function addActivationEvents() {\n    var node = rootNode;\n    activationEvents.add(node, 'dragstart', function (evt) {\n      return evt.preventDefault();\n    }, nonPassiveEvent).add(node, 'touchmove', function () {\n      return undefined;\n    }, nonPassiveEvent).add(node, 'touchend', function () {\n      return undefined;\n    }).add(node, 'touchstart', down).add(node, 'mousedown', down).add(node, 'touchcancel', up).add(node, 'contextmenu', up).add(node, 'click', click, true);\n  }\n  function addInteractionEvents() {\n    var node = isMouse ? document : rootNode;\n    interactionEvents.add(node, 'touchmove', move, nonPassiveEvent).add(node, 'touchend', up).add(node, 'mousemove', move, nonPassiveEvent).add(node, 'mouseup', up);\n  }\n  function removeAllEvents() {\n    activationEvents.removeAll();\n    interactionEvents.removeAll();\n  }\n  function isFocusNode(node) {\n    var name = node.nodeName || '';\n    return focusNodes.indexOf(name) > -1;\n  }\n  function forceBoost() {\n    var boost = dragFree ? freeForceBoost : snapForceBoost;\n    var type = isMouse ? 'mouse' : 'touch';\n    return boost[type];\n  }\n  function allowedForce(force, targetChanged) {\n    var next = index.clone().add(mathSign(force) * -1);\n    var isEdge = next.get() === index.min || next.get() === index.max;\n    var baseForce = scrollTarget.byDistance(force, !dragFree).distance;\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce;\n    if (!loop && isEdge) return baseForce * 0.4;\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\n    return scrollTarget.byIndex(next.get(), 0).distance;\n  }\n  function down(evt) {\n    isMouse = !dragTracker.isTouchEvent(evt);\n    if (isMouse && evt.button !== 0) return;\n    if (isFocusNode(evt.target)) return;\n    var isMoving = deltaAbs(target.get(), location.get()) >= 2;\n    var clearPreventClick = isMouse || !isMoving;\n    pointerIsDown = true;\n    dragTracker.pointerDown(evt);\n    dragStartPoint.set(target);\n    target.set(location);\n    scrollBody.useBaseMass().useSpeed(80);\n    addInteractionEvents();\n    startScroll = dragTracker.readPoint(evt);\n    startCross = dragTracker.readPoint(evt, crossAxis);\n    eventHandler.emit('pointerDown');\n    if (clearPreventClick) preventClick = false;\n  }\n  function move(evt) {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt);\n      var lastScroll = dragTracker.readPoint(evt);\n      var lastCross = dragTracker.readPoint(evt, crossAxis);\n      var diffScroll = deltaAbs(lastScroll, startScroll);\n      var diffCross = deltaAbs(lastCross, startCross);\n      preventScroll = diffScroll > diffCross;\n      if (!preventScroll && !preventClick) return up(evt);\n    }\n    var diff = dragTracker.pointerMove(evt);\n    if (!preventClick && diff) preventClick = true;\n    animation.start();\n    target.add(direction.apply(diff));\n    evt.preventDefault();\n  }\n  function up(evt) {\n    var currentLocation = scrollTarget.byDistance(0, false);\n    var targetChanged = currentLocation.index !== index.get();\n    var rawForce = dragTracker.pointerUp(evt) * forceBoost();\n    var force = allowedForce(direction.apply(rawForce), targetChanged);\n    var forceFactor = factorAbs(rawForce, force);\n    var isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5;\n    var isVigorous = targetChanged && forceFactor > 0.75;\n    var isBelowThreshold = mathAbs(rawForce) < dragThreshold;\n    var speed = isVigorous ? 10 : baseSpeed;\n    var mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass;\n    if (isMoving && !isMouse) preventClick = true;\n    preventScroll = false;\n    pointerIsDown = false;\n    interactionEvents.removeAll();\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass);\n    scrollTo.distance(force, !dragFree);\n    isMouse = false;\n    eventHandler.emit('pointerUp');\n  }\n  function click(evt) {\n    if (preventClick) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  } // DEPRECATED - Remove in v8 because handled automatically\n\n  function clickAllowed() {\n    return !preventClick;\n  }\n  function pointerDown() {\n    return pointerIsDown;\n  }\n  var self = {\n    addActivationEvents: addActivationEvents,\n    clickAllowed: clickAllowed,\n    pointerDown: pointerDown,\n    removeAllEvents: removeAllEvents\n  };\n  return self;\n}\nfunction DragTracker(axis) {\n  var logInterval = 170;\n  var startEvent;\n  var lastEvent;\n  function isTouchEvent(evt) {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent;\n  }\n  function readTime(evt) {\n    return evt.timeStamp;\n  }\n  function readPoint(evt, evtAxis) {\n    var property = evtAxis || axis.scroll;\n    var coord = \"client\".concat(property === 'x' ? 'X' : 'Y');\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord];\n  }\n  function pointerDown(evt) {\n    startEvent = evt;\n    lastEvent = evt;\n    return readPoint(evt);\n  }\n  function pointerMove(evt) {\n    var diff = readPoint(evt) - readPoint(lastEvent);\n    var expired = readTime(evt) - readTime(startEvent) > logInterval;\n    lastEvent = evt;\n    if (expired) startEvent = evt;\n    return diff;\n  }\n  function pointerUp(evt) {\n    if (!startEvent || !lastEvent) return 0;\n    var diffDrag = readPoint(lastEvent) - readPoint(startEvent);\n    var diffTime = readTime(evt) - readTime(startEvent);\n    var expired = readTime(evt) - readTime(lastEvent) > logInterval;\n    var force = diffDrag / diffTime;\n    var isFlick = diffTime && !expired && mathAbs(force) > 0.1;\n    return isFlick ? force : 0;\n  }\n  var self = {\n    isTouchEvent: isTouchEvent,\n    pointerDown: pointerDown,\n    pointerMove: pointerMove,\n    pointerUp: pointerUp,\n    readPoint: readPoint\n  };\n  return self;\n}\nfunction PercentOfView(viewSize) {\n  function measure(n) {\n    return viewSize * (n / 100);\n  }\n  var self = {\n    measure: measure\n  };\n  return self;\n}\nfunction ScrollBody(location, baseSpeed, baseMass) {\n  var roundToTwoDecimals = roundToDecimals(2);\n  var velocity = Vector1D(0);\n  var acceleration = Vector1D(0);\n  var attraction = Vector1D(0);\n  var attractionDirection = 0;\n  var speed = baseSpeed;\n  var mass = baseMass;\n  function update() {\n    velocity.add(acceleration);\n    location.add(velocity);\n    acceleration.multiply(0);\n  }\n  function applyForce(force) {\n    force.divide(mass);\n    acceleration.add(force);\n  }\n  function seek(target) {\n    attraction.set(target).subtract(location);\n    var magnitude = map(attraction.get(), 0, 100, 0, speed);\n    attractionDirection = mathSign(attraction.get());\n    attraction.normalize().multiply(magnitude).subtract(velocity);\n    applyForce(attraction);\n    return self;\n  }\n  function settle(target) {\n    var diff = target.get() - location.get();\n    var hasSettled = !roundToTwoDecimals(diff);\n    if (hasSettled) location.set(target);\n    return hasSettled;\n  }\n  function direction() {\n    return attractionDirection;\n  }\n  function useBaseSpeed() {\n    return useSpeed(baseSpeed);\n  }\n  function useBaseMass() {\n    return useMass(baseMass);\n  }\n  function useSpeed(n) {\n    speed = n;\n    return self;\n  }\n  function useMass(n) {\n    mass = n;\n    return self;\n  }\n  var self = {\n    direction: direction,\n    seek: seek,\n    settle: settle,\n    update: update,\n    useBaseMass: useBaseMass,\n    useBaseSpeed: useBaseSpeed,\n    useMass: useMass,\n    useSpeed: useSpeed\n  };\n  return self;\n}\nfunction ScrollBounds(limit, location, target, scrollBody, percentOfView) {\n  var pullBackThreshold = percentOfView.measure(10);\n  var edgeOffsetTolerance = percentOfView.measure(50);\n  var maxFriction = 0.85;\n  var disabled = false;\n  function shouldConstrain() {\n    if (disabled) return false;\n    if (!limit.reachedAny(target.get())) return false;\n    if (!limit.reachedAny(location.get())) return false;\n    return true;\n  }\n  function constrain(pointerDown) {\n    if (!shouldConstrain()) return;\n    var edge = limit.reachedMin(location.get()) ? 'min' : 'max';\n    var diffToEdge = mathAbs(limit[edge] - location.get());\n    var diffToTarget = target.get() - location.get();\n    var friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction);\n    target.subtract(diffToTarget * friction);\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()));\n      scrollBody.useSpeed(10).useMass(3);\n    }\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  var self = {\n    constrain: constrain,\n    toggleActive: toggleActive\n  };\n  return self;\n}\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll) {\n  var scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0]);\n  var snapsBounded = snapsAligned.map(scrollBounds.constrain);\n  var snapsContained = measureContained();\n  function findDuplicates() {\n    var startSnap = snapsBounded[0];\n    var endSnap = arrayLast(snapsBounded);\n    var min = snapsBounded.lastIndexOf(startSnap);\n    var max = snapsBounded.indexOf(endSnap) + 1;\n    return Limit(min, max);\n  }\n  function measureContained() {\n    if (contentSize <= viewSize) return [scrollBounds.max];\n    if (containScroll === 'keepSnaps') return snapsBounded;\n    var _a = findDuplicates(),\n      min = _a.min,\n      max = _a.max;\n    return snapsBounded.slice(min, max);\n  }\n  var self = {\n    snapsContained: snapsContained\n  };\n  return self;\n}\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\n  var limit = measureLimit();\n  function measureLimit() {\n    var startSnap = scrollSnaps[0];\n    var endSnap = arrayLast(scrollSnaps);\n    var min = loop ? startSnap - contentSize : endSnap;\n    var max = startSnap;\n    return Limit(min, max);\n  }\n  var self = {\n    limit: limit\n  };\n  return self;\n}\nfunction ScrollLooper(contentSize, limit, location, vectors) {\n  var jointSafety = 0.1;\n  var min = limit.min + jointSafety;\n  var max = limit.max + jointSafety;\n  var _a = Limit(min, max),\n    reachedMin = _a.reachedMin,\n    reachedMax = _a.reachedMax;\n  function shouldLoop(direction) {\n    if (direction === 1) return reachedMax(location.get());\n    if (direction === -1) return reachedMin(location.get());\n    return false;\n  }\n  function loop(direction) {\n    if (!shouldLoop(direction)) return;\n    var loopDistance = contentSize * (direction * -1);\n    vectors.forEach(function (v) {\n      return v.add(loopDistance);\n    });\n  }\n  var self = {\n    loop: loop\n  };\n  return self;\n}\nfunction ScrollProgress(limit) {\n  var max = limit.max,\n    scrollLength = limit.length;\n  function get(n) {\n    var currentLocation = n - max;\n    return currentLocation / -scrollLength;\n  }\n  var self = {\n    get: get\n  };\n  return self;\n}\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containScroll) {\n  var startEdge = axis.startEdge,\n    endEdge = axis.endEdge;\n  var groupSlides = slidesToScroll.groupSlides;\n  var alignments = measureSizes().map(alignment.measure);\n  var snaps = measureUnaligned();\n  var snapsAligned = measureAligned();\n  function measureSizes() {\n    return groupSlides(slideRects).map(function (rects) {\n      return arrayLast(rects)[endEdge] - rects[0][startEdge];\n    }).map(mathAbs);\n  }\n  function measureUnaligned() {\n    return slideRects.map(function (rect) {\n      return containerRect[startEdge] - rect[startEdge];\n    }).map(function (snap) {\n      return -mathAbs(snap);\n    });\n  }\n  function measureAligned() {\n    var containedStartSnap = 0;\n    var containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps);\n    return groupSlides(snaps).map(function (g) {\n      return g[0];\n    }).map(function (snap, index, groupedSnaps) {\n      var isFirst = !index;\n      var isLast = index === arrayLastIndex(groupedSnaps);\n      if (containScroll && isFirst) return containedStartSnap;\n      if (containScroll && isLast) return containedEndSnap;\n      return snap + alignments[index];\n    });\n  }\n  var self = {\n    snaps: snaps,\n    snapsAligned: snapsAligned\n  };\n  return self;\n}\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\n  var reachedAny = limit.reachedAny,\n    removeOffset = limit.removeOffset,\n    constrain = limit.constrain;\n  function minDistance(distances) {\n    return distances.concat().sort(function (a, b) {\n      return mathAbs(a) - mathAbs(b);\n    })[0];\n  }\n  function findTargetSnap(target) {\n    var distance = loop ? removeOffset(target) : constrain(target);\n    var ascDiffsToSnaps = scrollSnaps.map(function (scrollSnap) {\n      return scrollSnap - distance;\n    }).map(function (diffToSnap) {\n      return shortcut(diffToSnap, 0);\n    }).map(function (diff, i) {\n      return {\n        diff: diff,\n        index: i\n      };\n    }).sort(function (d1, d2) {\n      return mathAbs(d1.diff) - mathAbs(d2.diff);\n    });\n    var index = ascDiffsToSnaps[0].index;\n    return {\n      index: index,\n      distance: distance\n    };\n  }\n  function shortcut(target, direction) {\n    var targets = [target, target + contentSize, target - contentSize];\n    if (!loop) return targets[0];\n    if (!direction) return minDistance(targets);\n    var matchingTargets = targets.filter(function (t) {\n      return mathSign(t) === direction;\n    });\n    return minDistance(matchingTargets);\n  }\n  function byIndex(index, direction) {\n    var diffToSnap = scrollSnaps[index] - targetVector.get();\n    var distance = shortcut(diffToSnap, direction);\n    return {\n      index: index,\n      distance: distance\n    };\n  }\n  function byDistance(distance, snap) {\n    var target = targetVector.get() + distance;\n    var _a = findTargetSnap(target),\n      index = _a.index,\n      targetSnapDistance = _a.distance;\n    var reachedBound = !loop && reachedAny(target);\n    if (!snap || reachedBound) return {\n      index: index,\n      distance: distance\n    };\n    var diffToSnap = scrollSnaps[index] - targetSnapDistance;\n    var snapDistance = distance + shortcut(diffToSnap, 0);\n    return {\n      index: index,\n      distance: snapDistance\n    };\n  }\n  var self = {\n    byDistance: byDistance,\n    byIndex: byIndex,\n    shortcut: shortcut\n  };\n  return self;\n}\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollTarget, targetVector, eventHandler) {\n  function scrollTo(target) {\n    var distanceDiff = target.distance;\n    var indexDiff = target.index !== indexCurrent.get();\n    if (distanceDiff) {\n      animation.start();\n      targetVector.add(distanceDiff);\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get());\n      indexCurrent.set(target.index);\n      eventHandler.emit('select');\n    }\n  }\n  function distance(n, snap) {\n    var target = scrollTarget.byDistance(n, snap);\n    scrollTo(target);\n  }\n  function index(n, direction) {\n    var targetIndex = indexCurrent.clone().set(n);\n    var target = scrollTarget.byIndex(targetIndex.get(), direction);\n    scrollTo(target);\n  }\n  var self = {\n    distance: distance,\n    index: index\n  };\n  return self;\n}\nfunction Translate(axis, direction, container) {\n  var translate = axis.scroll === 'x' ? x : y;\n  var containerStyle = container.style;\n  var disabled = false;\n  function x(n) {\n    return \"translate3d(\".concat(n, \"px,0px,0px)\");\n  }\n  function y(n) {\n    return \"translate3d(0px,\".concat(n, \"px,0px)\");\n  }\n  function to(target) {\n    if (disabled) return;\n    containerStyle.transform = translate(direction.apply(target.get()));\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  function clear() {\n    if (disabled) return;\n    containerStyle.transform = '';\n    if (!container.getAttribute('style')) container.removeAttribute('style');\n  }\n  var self = {\n    clear: clear,\n    to: to,\n    toggleActive: toggleActive\n  };\n  return self;\n}\nfunction SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, scroll, slides) {\n  var ascItems = arrayKeys(slideSizesWithGaps);\n  var descItems = arrayKeys(slideSizesWithGaps).reverse();\n  var loopPoints = startPoints().concat(endPoints());\n  function removeSlideSizes(indexes, from) {\n    return indexes.reduce(function (a, i) {\n      return a - slideSizesWithGaps[i];\n    }, from);\n  }\n  function slidesInGap(indexes, gap) {\n    return indexes.reduce(function (a, i) {\n      var remainingGap = removeSlideSizes(a, gap);\n      return remainingGap > 0 ? a.concat([i]) : a;\n    }, []);\n  }\n  function findLoopPoints(indexes, edge) {\n    var isStartEdge = edge === 'start';\n    var offset = isStartEdge ? -contentSize : contentSize;\n    var slideBounds = slidesInView.findSlideBounds([offset]);\n    return indexes.map(function (index) {\n      var initial = isStartEdge ? 0 : -contentSize;\n      var altered = isStartEdge ? contentSize : 0;\n      var bounds = slideBounds.filter(function (b) {\n        return b.index === index;\n      })[0];\n      var point = bounds[isStartEdge ? 'end' : 'start'];\n      var shift = Vector1D(-1);\n      var location = Vector1D(-1);\n      var translate = Translate(axis, direction, slides[index]);\n      var target = function () {\n        return shift.set(scroll.get() > point ? initial : altered);\n      };\n      return {\n        index: index,\n        location: location,\n        translate: translate,\n        target: target\n      };\n    });\n  }\n  function startPoints() {\n    var gap = scrollSnaps[0] - 1;\n    var indexes = slidesInGap(descItems, gap);\n    return findLoopPoints(indexes, 'end');\n  }\n  function endPoints() {\n    var gap = viewSize - scrollSnaps[0] - 1;\n    var indexes = slidesInGap(ascItems, gap);\n    return findLoopPoints(indexes, 'start');\n  }\n  function canLoop() {\n    return loopPoints.every(function (_a) {\n      var index = _a.index;\n      var otherIndexes = ascItems.filter(function (i) {\n        return i !== index;\n      });\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\n    });\n  }\n  function loop() {\n    loopPoints.forEach(function (loopPoint) {\n      var target = loopPoint.target,\n        translate = loopPoint.translate,\n        location = loopPoint.location;\n      var shift = target();\n      if (shift.get() === location.get()) return;\n      if (shift.get() === 0) translate.clear();else translate.to(shift);\n      location.set(shift);\n    });\n  }\n  function clear() {\n    loopPoints.forEach(function (loopPoint) {\n      return loopPoint.translate.clear();\n    });\n  }\n  var self = {\n    canLoop: canLoop,\n    clear: clear,\n    loop: loop,\n    loopPoints: loopPoints\n  };\n  return self;\n}\nfunction SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold) {\n  var removeOffset = limit.removeOffset,\n    constrain = limit.constrain;\n  var roundingSafety = 0.5;\n  var cachedOffsets = loop ? [0, contentSize, -contentSize] : [0];\n  var cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold);\n  function findSlideThresholds(threshold) {\n    var slideThreshold = threshold || 0;\n    return slideSizes.map(function (slideSize) {\n      var thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety);\n      return thresholdLimit.constrain(slideSize * slideThreshold);\n    });\n  }\n  function findSlideBounds(offsets, threshold) {\n    var slideOffsets = offsets || cachedOffsets;\n    var slideThresholds = findSlideThresholds(threshold);\n    return slideOffsets.reduce(function (list, offset) {\n      var bounds = snaps.map(function (snap, index) {\n        return {\n          start: snap - slideSizes[index] + slideThresholds[index] + offset,\n          end: snap + viewSize - slideThresholds[index] + offset,\n          index: index\n        };\n      });\n      return list.concat(bounds);\n    }, []);\n  }\n  function check(location, bounds) {\n    var limitedLocation = loop ? removeOffset(location) : constrain(location);\n    var slideBounds = bounds || cachedBounds;\n    return slideBounds.reduce(function (list, slideBound) {\n      var index = slideBound.index,\n        start = slideBound.start,\n        end = slideBound.end;\n      var inList = list.indexOf(index) !== -1;\n      var inView = start < limitedLocation && end > limitedLocation;\n      return !inList && inView ? list.concat([index]) : list;\n    }, []);\n  }\n  var self = {\n    check: check,\n    findSlideBounds: findSlideBounds\n  };\n  return self;\n}\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap) {\n  var measureSize = axis.measureSize,\n    startEdge = axis.startEdge,\n    endEdge = axis.endEdge;\n  var withEdgeGap = slideRects[0] && readEdgeGap;\n  var startGap = measureStartGap();\n  var endGap = measureEndGap();\n  var slideSizes = slideRects.map(measureSize);\n  var slideSizesWithGaps = measureWithGaps();\n  function measureStartGap() {\n    if (!withEdgeGap) return 0;\n    var slideRect = slideRects[0];\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\n  }\n  function measureEndGap() {\n    if (!withEdgeGap) return 0;\n    var style = window.getComputedStyle(arrayLast(slides));\n    return parseFloat(style.getPropertyValue(\"margin-\".concat(endEdge)));\n  }\n  function measureWithGaps() {\n    return slideRects.map(function (rect, index, rects) {\n      var isFirst = !index;\n      var isLast = index === arrayLastIndex(rects);\n      if (isFirst) return slideSizes[index] + startGap;\n      if (isLast) return slideSizes[index] + endGap;\n      return rects[index + 1][startEdge] - rect[startEdge];\n    }).map(mathAbs);\n  }\n  var self = {\n    slideSizes: slideSizes,\n    slideSizesWithGaps: slideSizesWithGaps\n  };\n  return self;\n}\nfunction SlidesToScroll(viewSize, slideSizesWithGaps, slidesToScroll) {\n  var groupByNumber = isNumber(slidesToScroll);\n  function byNumber(array, groupSize) {\n    return arrayKeys(array).filter(function (i) {\n      return i % groupSize === 0;\n    }).map(function (i) {\n      return array.slice(i, i + groupSize);\n    });\n  }\n  function bySize(array) {\n    return arrayKeys(array).reduce(function (groupSizes, i) {\n      var chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1);\n      var chunkSize = chunk.reduce(function (a, s) {\n        return a + s;\n      }, 0);\n      return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes;\n    }, []).map(function (start, i, groupSizes) {\n      return array.slice(start, groupSizes[i + 1]);\n    });\n  }\n  function groupSlides(array) {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\n  }\n  var self = {\n    groupSlides: groupSlides\n  };\n  return self;\n}\nfunction Engine(root, container, slides, options, eventHandler) {\n  // Options\n  var align = options.align,\n    scrollAxis = options.axis,\n    contentDirection = options.direction,\n    startIndex = options.startIndex,\n    inViewThreshold = options.inViewThreshold,\n    loop = options.loop,\n    speed = options.speed,\n    dragFree = options.dragFree,\n    groupSlides = options.slidesToScroll,\n    skipSnaps = options.skipSnaps,\n    containScroll = options.containScroll; // Measurements\n\n  var containerRect = container.getBoundingClientRect();\n  var slideRects = slides.map(function (slide) {\n    return slide.getBoundingClientRect();\n  });\n  var direction = Direction(contentDirection);\n  var axis = Axis(scrollAxis, contentDirection);\n  var viewSize = axis.measureSize(containerRect);\n  var percentOfView = PercentOfView(viewSize);\n  var alignment = Alignment(align, viewSize);\n  var containSnaps = !loop && containScroll !== '';\n  var readEdgeGap = loop || containScroll !== '';\n  var _a = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap),\n    slideSizes = _a.slideSizes,\n    slideSizesWithGaps = _a.slideSizesWithGaps;\n  var slidesToScroll = SlidesToScroll(viewSize, slideSizesWithGaps, groupSlides);\n  var _b = ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containSnaps),\n    snaps = _b.snaps,\n    snapsAligned = _b.snapsAligned;\n  var contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\n  var snapsContained = ScrollContain(viewSize, contentSize, snapsAligned, containScroll).snapsContained;\n  var scrollSnaps = containSnaps ? snapsContained : snapsAligned;\n  var limit = ScrollLimit(contentSize, scrollSnaps, loop).limit; // Indexes\n\n  var index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\n  var indexPrevious = index.clone();\n  var slideIndexes = arrayKeys(slides); // Draw\n\n  var update = function () {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown());\n    engine.scrollBody.seek(target).update();\n    var settled = engine.scrollBody.settle(target);\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop();\n      eventHandler.emit('settle');\n    }\n    if (!settled) {\n      eventHandler.emit('scroll');\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction());\n      engine.slideLooper.loop();\n    }\n    engine.translate.to(location);\n    engine.animation.proceed();\n  }; // Shared\n\n  var animation = Animation(update);\n  var startLocation = scrollSnaps[index.get()];\n  var location = Vector1D(startLocation);\n  var target = Vector1D(startLocation);\n  var scrollBody = ScrollBody(location, speed, 1);\n  var scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\n  var scrollTo = ScrollTo(animation, index, indexPrevious, scrollTarget, target, eventHandler);\n  var slidesInView = SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold); // DragHandler\n\n  var dragHandler = DragHandler(axis, direction, root, target, DragTracker(axis), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps); // Engine\n\n  var engine = {\n    containerRect: containerRect,\n    slideRects: slideRects,\n    animation: animation,\n    axis: axis,\n    direction: direction,\n    dragHandler: dragHandler,\n    eventStore: EventStore(),\n    percentOfView: percentOfView,\n    index: index,\n    indexPrevious: indexPrevious,\n    limit: limit,\n    location: location,\n    options: options,\n    scrollBody: scrollBody,\n    scrollBounds: ScrollBounds(limit, location, target, scrollBody, percentOfView),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [location, target]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps: scrollSnaps,\n    scrollTarget: scrollTarget,\n    scrollTo: scrollTo,\n    slideLooper: SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, location, slides),\n    slidesToScroll: slidesToScroll,\n    slidesInView: slidesInView,\n    slideIndexes: slideIndexes,\n    target: target,\n    translate: Translate(axis, direction, container)\n  };\n  return engine;\n}\nfunction EventHandler() {\n  var listeners = {};\n  function getListeners(evt) {\n    return listeners[evt] || [];\n  }\n  function emit(evt) {\n    getListeners(evt).forEach(function (e) {\n      return e(evt);\n    });\n    return self;\n  }\n  function on(evt, cb) {\n    listeners[evt] = getListeners(evt).concat([cb]);\n    return self;\n  }\n  function off(evt, cb) {\n    listeners[evt] = getListeners(evt).filter(function (e) {\n      return e !== cb;\n    });\n    return self;\n  }\n  var self = {\n    emit: emit,\n    off: off,\n    on: on\n  };\n  return self;\n}\nvar defaultOptions = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true\n};\nfunction OptionsHandler() {\n  function merge(optionsA, optionsB) {\n    return objectsMergeDeep(optionsA, optionsB || {});\n  }\n  function areEqual(optionsA, optionsB) {\n    var breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}));\n    var breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}));\n    if (breakpointsA !== breakpointsB) return false;\n    return objectsAreEqual(optionsA, optionsB);\n  }\n  function atMedia(options) {\n    var optionsAtMedia = options.breakpoints || {};\n    var matchedMediaOptions = objectKeys(optionsAtMedia).filter(function (media) {\n      return window.matchMedia(media).matches;\n    }).map(function (media) {\n      return optionsAtMedia[media];\n    }).reduce(function (a, mediaOption) {\n      return merge(a, mediaOption);\n    }, {});\n    return merge(options, matchedMediaOptions);\n  }\n  var self = {\n    merge: merge,\n    areEqual: areEqual,\n    atMedia: atMedia\n  };\n  return self;\n}\nfunction PluginsHandler() {\n  var _a = OptionsHandler(),\n    atMedia = _a.atMedia,\n    areEqual = _a.areEqual;\n  var activePlugins = [];\n  var pluginsChanged = [];\n  function haveChanged() {\n    return pluginsChanged.some(function (hasChanged) {\n      return hasChanged();\n    });\n  }\n  function hasChanged(plugin) {\n    var options = atMedia(plugin.options);\n    return function () {\n      return !areEqual(options, atMedia(plugin.options));\n    };\n  }\n  function init(plugins, embla) {\n    pluginsChanged = plugins.map(hasChanged);\n    activePlugins = plugins.filter(function (plugin) {\n      return atMedia(plugin.options).active;\n    });\n    activePlugins.forEach(function (plugin) {\n      return plugin.init(embla);\n    });\n    return plugins.reduce(function (map, plugin) {\n      var _a;\n      return Object.assign(map, (_a = {}, _a[plugin.name] = plugin, _a));\n    }, {});\n  }\n  function destroy() {\n    activePlugins = activePlugins.filter(function (plugin) {\n      return plugin.destroy();\n    });\n  }\n  var self = {\n    init: init,\n    destroy: destroy,\n    haveChanged: haveChanged\n  };\n  return self;\n}\nfunction EmblaCarousel(nodes, userOptions, userPlugins) {\n  var resizeHandlers = EventStore();\n  var optionsHandler = OptionsHandler();\n  var pluginsHandler = PluginsHandler();\n  var eventHandler = EventHandler();\n  var on = eventHandler.on,\n    off = eventHandler.off;\n  var reInit = reActivate;\n  var destroyed = false;\n  var engine;\n  var optionsBase = optionsHandler.merge(defaultOptions, EmblaCarousel.globalOptions);\n  var options = optionsHandler.merge(optionsBase);\n  var pluginList = [];\n  var pluginApis;\n  var rootSize = 0;\n  var root;\n  var container;\n  var slides;\n  function storeElements() {\n    var providedContainer = 'container' in nodes && nodes.container;\n    var providedSlides = 'slides' in nodes && nodes.slides;\n    root = 'root' in nodes ? nodes.root : nodes;\n    container = providedContainer || root.children[0];\n    slides = providedSlides || [].slice.call(container.children);\n  }\n  function activate(withOptions, withPlugins) {\n    if (destroyed) return;\n    storeElements();\n    optionsBase = optionsHandler.merge(optionsBase, withOptions);\n    options = optionsHandler.atMedia(optionsBase);\n    engine = Engine(root, container, slides, options, eventHandler);\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect());\n    if (!options.active) return deActivate();\n    engine.translate.to(engine.location);\n    pluginList = withPlugins || pluginList;\n    pluginApis = pluginsHandler.init(pluginList, self);\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate();\n        activate({\n          loop: false\n        }, withPlugins);\n        optionsBase = optionsHandler.merge(optionsBase, {\n          loop: true\n        });\n        return;\n      }\n      engine.slideLooper.loop();\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents();\n    }\n  }\n  function reActivate(withOptions, withPlugins) {\n    var startIndex = selectedScrollSnap();\n    deActivate();\n    activate(optionsHandler.merge({\n      startIndex: startIndex\n    }, withOptions), withPlugins);\n    eventHandler.emit('reInit');\n  }\n  function deActivate() {\n    engine.dragHandler.removeAllEvents();\n    engine.animation.stop();\n    engine.eventStore.removeAll();\n    engine.translate.clear();\n    engine.slideLooper.clear();\n    pluginsHandler.destroy();\n  }\n  function destroy() {\n    if (destroyed) return;\n    destroyed = true;\n    resizeHandlers.removeAll();\n    deActivate();\n    eventHandler.emit('destroy');\n  }\n  function resize() {\n    var newOptions = optionsHandler.atMedia(optionsBase);\n    var optionsChanged = !optionsHandler.areEqual(newOptions, options);\n    var newRootSize = engine.axis.measureSize(root.getBoundingClientRect());\n    var rootSizeChanged = rootSize !== newRootSize;\n    var pluginsChanged = pluginsHandler.haveChanged();\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate();\n    eventHandler.emit('resize');\n  }\n  function slidesInView(target) {\n    var location = engine[target ? 'target' : 'location'].get();\n    var type = options.loop ? 'removeOffset' : 'constrain';\n    return engine.slidesInView.check(engine.limit[type](location));\n  }\n  function slidesNotInView(target) {\n    var inView = slidesInView(target);\n    return engine.slideIndexes.filter(function (index) {\n      return inView.indexOf(index) === -1;\n    });\n  }\n  function scrollTo(index, jump, direction) {\n    if (!options.active || destroyed) return;\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed);\n    engine.scrollTo.index(index, direction || 0);\n  }\n  function scrollNext(jump) {\n    var next = engine.index.clone().add(1);\n    scrollTo(next.get(), jump === true, -1);\n  }\n  function scrollPrev(jump) {\n    var prev = engine.index.clone().add(-1);\n    scrollTo(prev.get(), jump === true, 1);\n  }\n  function canScrollNext() {\n    var next = engine.index.clone().add(1);\n    return next.get() !== selectedScrollSnap();\n  }\n  function canScrollPrev() {\n    var prev = engine.index.clone().add(-1);\n    return prev.get() !== selectedScrollSnap();\n  }\n  function scrollSnapList() {\n    return engine.scrollSnaps.map(engine.scrollProgress.get);\n  }\n  function scrollProgress() {\n    return engine.scrollProgress.get(engine.location.get());\n  }\n  function selectedScrollSnap() {\n    return engine.index.get();\n  }\n  function previousScrollSnap() {\n    return engine.indexPrevious.get();\n  }\n  function clickAllowed() {\n    return engine.dragHandler.clickAllowed();\n  }\n  function plugins() {\n    return pluginApis;\n  }\n  function internalEngine() {\n    return engine;\n  }\n  function rootNode() {\n    return root;\n  }\n  function containerNode() {\n    return container;\n  }\n  function slideNodes() {\n    return slides;\n  }\n  var self = {\n    canScrollNext: canScrollNext,\n    canScrollPrev: canScrollPrev,\n    clickAllowed: clickAllowed,\n    containerNode: containerNode,\n    internalEngine: internalEngine,\n    destroy: destroy,\n    off: off,\n    on: on,\n    plugins: plugins,\n    previousScrollSnap: previousScrollSnap,\n    reInit: reInit,\n    rootNode: rootNode,\n    scrollNext: scrollNext,\n    scrollPrev: scrollPrev,\n    scrollProgress: scrollProgress,\n    scrollSnapList: scrollSnapList,\n    scrollTo: scrollTo,\n    selectedScrollSnap: selectedScrollSnap,\n    slideNodes: slideNodes,\n    slidesInView: slidesInView,\n    slidesNotInView: slidesNotInView\n  };\n  activate(userOptions, userPlugins);\n  resizeHandlers.add(window, 'resize', resize);\n  setTimeout(function () {\n    return eventHandler.emit('init');\n  }, 0);\n  return self;\n}\nEmblaCarousel.globalOptions = undefined;\nEmblaCarousel.optionsHandler = OptionsHandler;\nexport { EmblaCarousel as default };","map":{"version":3,"names":["map","value","iStart","iStop","oStart","oStop","isNumber","subject","isObject","Object","prototype","toString","call","isArray","Array","isRecord","mathAbs","n","Math","abs","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","length","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","objectsAreEqual","objectAKeys","objectBKeys","every","concat","Alignment","align","viewSize","predefined","start","center","end","percent","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","sign","apply","EventStore","listeners","node","type","handler","options","passive","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","eventHandler","percentOfView","dragFree","skipSnaps","crossAxis","focusNodes","nonPassiveEvent","dragStartPoint","activationEvents","interactionEvents","dragThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","evt","preventDefault","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","isTouchEvent","button","isMoving","clearPreventClick","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","lastScroll","lastCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","stopPropagation","clickAllowed","DragTracker","logInterval","startEvent","lastEvent","TouchEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","PercentOfView","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","maxFriction","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","friction","toggleActive","ScrollContain","contentSize","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","slice","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","scrollLength","ScrollSnaps","alignment","containerRect","slideRects","slideSizesWithGaps","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","snap","containedStartSnap","containedEndSnap","g","groupedSnaps","isFirst","isLast","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","i","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","Translate","container","translate","x","y","containerStyle","style","to","transform","clear","getAttribute","removeAttribute","SlideLooper","slidesInView","slides","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","from","slidesInGap","gap","remainingGap","findLoopPoints","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","point","shift","canLoop","otherIndexes","loopPoint","SlidesInView","slideSizes","inViewThreshold","roundingSafety","cachedOffsets","cachedBounds","findSlideThresholds","threshold","slideThreshold","slideSize","thresholdLimit","offsets","slideOffsets","slideThresholds","list","check","limitedLocation","slideBound","inList","inView","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","parseFloat","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","groupSizes","chunk","chunkSize","s","Engine","root","scrollAxis","contentDirection","startIndex","getBoundingClientRect","slide","containSnaps","_b","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","eventStore","scrollProgress","EventHandler","getListeners","e","on","off","defaultOptions","breakpoints","draggable","OptionsHandler","merge","optionsA","optionsB","areEqual","breakpointsA","JSON","stringify","breakpointsB","atMedia","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","PluginsHandler","activePlugins","pluginsChanged","haveChanged","some","hasChanged","plugin","init","plugins","embla","assign","destroy","EmblaCarousel","nodes","userOptions","userPlugins","resizeHandlers","optionsHandler","pluginsHandler","reInit","reActivate","destroyed","optionsBase","globalOptions","pluginList","pluginApis","rootSize","storeElements","providedContainer","providedSlides","children","activate","withOptions","withPlugins","deActivate","offsetParent","selectedScrollSnap","resize","newOptions","optionsChanged","newRootSize","rootSizeChanged","slidesNotInView","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","internalEngine","containerNode","slideNodes","setTimeout"],"sources":["C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\utils.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Alignment.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Animation.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Axis.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Limit.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Counter.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Direction.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\EventStore.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Vector1d.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\DragHandler.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\DragTracker.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\PercentOfView.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollBody.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollBounds.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollContain.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollLimit.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollLooper.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollProgress.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollSnaps.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollTarget.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\ScrollTo.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Translate.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\SlideLooper.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\SlidesInView.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\SlideSizes.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\SlidesToScroll.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Engine.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\EventHandler.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\Options.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\OptionsHandler.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\PluginsHandler.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel\\src\\components\\index.ts"],"sourcesContent":["export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isArray(subject: unknown): subject is Record<number, unknown> {\n  return Array.isArray(subject)\n}\n\nexport function isRecord(\n  subject: unknown,\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || isArray(subject)\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / mathAbs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function objectKeys<Type>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function objectsAreEqual(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): boolean {\n  const objectAKeys = objectKeys(objectA)\n  const objectBKeys = objectKeys(objectB)\n\n  if (objectAKeys.length !== objectBKeys.length) return false\n\n  return objectAKeys.every((key) => {\n    const valueA = objectA[key]\n    const valueB = objectB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return objectsAreEqual(valueA, valueB)\n  })\n}\n","import { isNumber } from './utils'\n\nexport type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (isNumber(align)) return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply,\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true },\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => node.removeEventListener(type, handler, options))\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathAbs, mathSign } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  loop: boolean,\n  dragFree: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const dragThreshold = percentOfView.measure(20)\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function addInteractionEvents(): void {\n    const node = isMouse ? document : rootNode\n    interactionEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.4\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    isMouse = !dragTracker.isTouchEvent(evt)\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n  }\n\n  function move(evt: PointerEventType): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      const lastScroll = dragTracker.readPoint(evt)\n      const lastCross = dragTracker.readPoint(evt, crossAxis)\n      const diffScroll = deltaAbs(lastScroll, startScroll)\n      const diffCross = deltaAbs(lastCross, startCross)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = mathAbs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  // DEPRECATED - Remove in v8 because handled automatically\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { mathAbs } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  isTouchEvent: (evt: PointerEventType) => evt is TouchEvent\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(axis: AxisType): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function isTouchEvent(evt: PointerEventType): evt is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent\n  }\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    isTouchEvent,\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (target: Vector1DType) => ScrollBodyType\n  settle: (target: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(force: Vector1DType): void {\n    force.divide(mass)\n    acceleration.add(force)\n  }\n\n  function seek(target: Vector1DType): ScrollBodyType {\n    attraction.set(target).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(target: Vector1DType): boolean {\n    const diff = target.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(target)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType,\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const maxFriction = 0.85\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollType,\n  containScroll: boolean,\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const containedStartSnap = 0\n    const containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps)\n\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index, groupedSnaps) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(groupedSnaps)\n        if (containScroll && isFirst) return containedStartSnap\n        if (containScroll && isLast) return containedEndSnap\n        return snap + alignments[index]\n      })\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    return minDistance(matchingTargets)\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  index: number\n  translate: TranslateType\n  location: Vector1DType\n  target: () => Vector1DType\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scroll: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds([offset])\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const shift = Vector1D(-1)\n      const location = Vector1D(-1)\n      const translate = Translate(axis, direction, slides[index])\n      const target = () => shift.set(scroll.get() > point ? initial : altered)\n      return { index, location, translate, target }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, location } = loopPoint\n      const shift = target()\n      if (shift.get() === location.get()) return\n      if (shift.get() === 0) translate.clear()\n      else translate.to(shift)\n      location.set(shift)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\n\nexport type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number, bounds?: SlideBoundType[]) => number[]\n  findSlideBounds: (offsets?: number[], threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  limit: LimitType,\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const { removeOffset, constrain } = limit\n  const roundingSafety = 0.5\n  const cachedOffsets = loop ? [0, contentSize, -contentSize] : [0]\n  const cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold)\n\n  function findSlideThresholds(threshold?: number): number[] {\n    const slideThreshold = threshold || 0\n\n    return slideSizes.map((slideSize) => {\n      const thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety)\n      return thresholdLimit.constrain(slideSize * slideThreshold)\n    })\n  }\n\n  function findSlideBounds(\n    offsets?: number[],\n    threshold?: number,\n  ): SlideBoundType[] {\n    const slideOffsets = offsets || cachedOffsets\n    const slideThresholds = findSlideThresholds(threshold)\n\n    return slideOffsets.reduce((list: SlideBoundType[], offset) => {\n      const bounds = snaps.map((snap, index) => ({\n        start: snap - slideSizes[index] + slideThresholds[index] + offset,\n        end: snap + viewSize - slideThresholds[index] + offset,\n        index,\n      }))\n      return list.concat(bounds)\n    }, [])\n  }\n\n  function check(location: number, bounds?: SlideBoundType[]): number[] {\n    const limitedLocation = loop ? removeOffset(location) : constrain(location)\n    const slideBounds = bounds || cachedBounds\n\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < limitedLocation && end > limitedLocation\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = window.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(rects)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { arrayKeys, arrayLast, isNumber } from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  viewSize: number,\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollOptionType,\n): SlidesToScrollType {\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    return arrayKeys(array)\n      .reduce((groupSizes: number[], i) => {\n        const chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1)\n        const chunkSize = chunk.reduce((a, s) => a + s, 0)\n        return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes\n      }, [])\n      .map((start, i, groupSizes) => array.slice(start, groupSizes[i + 1]))\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  containerRect: DOMRect\n  slideRects: DOMRect[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  eventHandler: EventHandlerType,\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && containScroll !== ''\n  const readEdgeGap = loop || containScroll !== ''\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n  )\n  const slidesToScroll = SlidesToScroll(\n    viewSize,\n    slideSizesWithGaps,\n    groupSlides,\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slideSizesWithGaps,\n    slidesToScroll,\n    containSnaps,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!settled) {\n      eventHandler.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    limit,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    DragTracker(axis),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    eventHandler,\n    percentOfView,\n    loop,\n    dragFree,\n    skipSnaps,\n  )\n\n  // Engine\n  const engine: EngineType = {\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    eventStore: EventStore(),\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView,\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesToScroll,\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventHandlerType = {\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  draggable: boolean\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  speed: number\n  startIndex: number\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsAreEqual, objectsMergeDeep } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  merge: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ) => TypeA\n  areEqual: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ) => boolean\n  atMedia: <Type extends OptionsType>(options: Type) => Type\n}\n\nexport function OptionsHandler(): OptionsHandlerType {\n  function merge<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function areEqual<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ): boolean {\n    const breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}))\n    const breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}))\n    if (breakpointsA !== breakpointsB) return false\n    return objectsAreEqual(optionsA, optionsB)\n  }\n\n  function atMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => window.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => merge(a, mediaOption), {})\n\n    return merge(options, matchedMediaOptions)\n  }\n\n  const self: OptionsHandlerType = {\n    merge,\n    areEqual,\n    atMedia,\n  }\n  return self\n}\n","import { EmblaCarouselType } from '.'\nimport { OptionsHandler } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\ntype PluginChangedHandlerType = () => boolean\n\nexport type PluginsHandlerType = {\n  init: (\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ) => EmblaPluginsType\n  destroy: () => void\n  haveChanged: PluginChangedHandlerType\n}\n\nexport function PluginsHandler(): PluginsHandlerType {\n  const { atMedia, areEqual } = OptionsHandler()\n  let activePlugins: EmblaPluginType[] = []\n  let pluginsChanged: PluginChangedHandlerType[] = []\n\n  function haveChanged(): boolean {\n    return pluginsChanged.some((hasChanged) => hasChanged())\n  }\n\n  function hasChanged(plugin: EmblaPluginType): PluginChangedHandlerType {\n    const options = atMedia(plugin.options)\n    return (): boolean => !areEqual(options, atMedia(plugin.options))\n  }\n\n  function init(\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ): EmblaPluginsType {\n    pluginsChanged = plugins.map(hasChanged)\n    activePlugins = plugins.filter((plugin) => atMedia(plugin.options).active)\n    activePlugins.forEach((plugin) => plugin.init(embla))\n\n    return plugins.reduce((map, plugin) => {\n      return Object.assign(map, { [plugin.name]: plugin })\n    }, {})\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy,\n    haveChanged,\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type EmblaNodesType = {\n  root: HTMLElement\n  container?: HTMLElement\n  slides?: HTMLElement[]\n}\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  nodes: HTMLElement | EmblaNodesType,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[],\n): EmblaCarouselType {\n  const resizeHandlers = EventStore()\n  const optionsHandler = OptionsHandler()\n  const pluginsHandler = PluginsHandler()\n  const eventHandler = EventHandler()\n  const { on, off } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = optionsHandler.merge(\n    defaultOptions,\n    EmblaCarousel.globalOptions,\n  )\n  let options = optionsHandler.merge(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n  let rootSize = 0\n  let root: HTMLElement\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const providedContainer = 'container' in nodes && nodes.container\n    const providedSlides = 'slides' in nodes && nodes.slides\n\n    root = 'root' in nodes ? nodes.root : nodes\n    container = providedContainer || <HTMLElement>root.children[0]\n    slides = providedSlides || [].slice.call(container.children)\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    if (destroyed) return\n    storeElements()\n\n    optionsBase = optionsHandler.merge(optionsBase, withOptions)\n    options = optionsHandler.atMedia(optionsBase)\n    engine = Engine(root, container, slides, options, eventHandler)\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect())\n\n    if (!options.active) return deActivate()\n\n    engine.translate.to(engine.location)\n    pluginList = withPlugins || pluginList\n    pluginApis = pluginsHandler.init(pluginList, self)\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        activate({ loop: false }, withPlugins)\n        optionsBase = optionsHandler.merge(optionsBase, { loop: true })\n        return\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n    }\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(optionsHandler.merge({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.animation.stop()\n    engine.eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    pluginsHandler.destroy()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    resizeHandlers.removeAll()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function resize(): void {\n    const newOptions = optionsHandler.atMedia(optionsBase)\n    const optionsChanged = !optionsHandler.areEqual(newOptions, options)\n    const newRootSize = engine.axis.measureSize(root.getBoundingClientRect())\n    const rootSizeChanged = rootSize !== newRootSize\n    const pluginsChanged = pluginsHandler.haveChanged()\n\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate()\n    eventHandler.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n\n  activate(userOptions, userPlugins)\n  resizeHandlers.add(window, 'resize', resize)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\nEmblaCarousel.optionsHandler = OptionsHandler\n\nexport default EmblaCarousel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}