{"ast":null,"code":"import { useRef, useState, useCallback, useEffect } from 'react';\nimport EmblaCarousel from 'embla-carousel';\nfunction canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction sortAndMapPluginToOptions(plugins) {\n  return plugins.concat().sort(function (a, b) {\n    return a.name > b.name ? 1 : -1;\n  }).map(function (plugin) {\n    return plugin.options;\n  });\n}\nfunction arePluginsEqual(pluginsA, pluginsB) {\n  if (pluginsA.length !== pluginsB.length) return false;\n  var areEqual = EmblaCarousel.optionsHandler().areEqual;\n  var optionsA = sortAndMapPluginToOptions(pluginsA);\n  var optionsB = sortAndMapPluginToOptions(pluginsB);\n  return optionsA.every(function (optionA, index) {\n    var optionB = optionsB[index];\n    return areEqual(optionA, optionB);\n  });\n}\nfunction useEmblaCarousel(options, plugins) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (plugins === void 0) {\n    plugins = [];\n  }\n  var optionsHandler = useRef(EmblaCarousel.optionsHandler());\n  var storedOptions = useRef(options);\n  var storedPlugins = useRef(plugins);\n  var _a = useState(),\n    embla = _a[0],\n    setEmbla = _a[1];\n  var _b = useState(),\n    viewport = _b[0],\n    setViewport = _b[1];\n  var reInit = useCallback(function () {\n    if (embla) embla.reInit(storedOptions.current, storedPlugins.current);\n  }, [embla]);\n  useEffect(function () {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\n      var newEmbla_1 = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\n      setEmbla(newEmbla_1);\n      return function () {\n        return newEmbla_1.destroy();\n      };\n    } else {\n      setEmbla(undefined);\n    }\n  }, [viewport, setEmbla]);\n  useEffect(function () {\n    if (optionsHandler.current.areEqual(storedOptions.current, options)) return;\n    storedOptions.current = options;\n    reInit();\n  }, [options, reInit]);\n  useEffect(function () {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\n    storedPlugins.current = plugins;\n    reInit();\n  }, [plugins, reInit]);\n  return [setViewport, embla];\n}\nuseEmblaCarousel.globalOptions = undefined;\nexport { useEmblaCarousel as default };","map":{"version":3,"names":["canUseDOM","window","document","createElement","sortAndMapPluginToOptions","plugins","concat","sort","a","b","name","map","plugin","options","arePluginsEqual","pluginsA","pluginsB","length","areEqual","EmblaCarousel","optionsHandler","optionsA","optionsB","every","optionA","index","optionB","useEmblaCarousel","useRef","storedOptions","storedPlugins","_a","useState","embla","setEmbla","_b","viewport","setViewport","reInit","useCallback","current","useEffect","globalOptions","newEmbla_1","destroy","undefined"],"sources":["C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel-react\\src\\components\\utils.ts","C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\embla-carousel-react\\src\\components\\index.ts"],"sourcesContent":["import EmblaCarousel, { EmblaPluginType } from 'embla-carousel'\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function sortAndMapPluginToOptions(\n  plugins: EmblaPluginType[],\n): EmblaPluginType['options'][] {\n  return plugins\n    .concat()\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .map((plugin) => plugin.options)\n}\n\nexport function arePluginsEqual(\n  pluginsA: EmblaPluginType[],\n  pluginsB: EmblaPluginType[],\n): boolean {\n  if (pluginsA.length !== pluginsB.length) return false\n\n  const { areEqual } = EmblaCarousel.optionsHandler()\n  const optionsA = sortAndMapPluginToOptions(pluginsA)\n  const optionsB = sortAndMapPluginToOptions(pluginsB)\n\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index]\n    return areEqual(optionA, optionB)\n  })\n}\n","import { useRef, useEffect, useState, useCallback } from 'react'\nimport { arePluginsEqual, canUseDOM } from './utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType,\n} from 'embla-carousel'\n\ntype EmblaViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null,\n) => void\n\nexport type UseEmblaCarouselType = [\n  EmblaViewportRefType,\n  EmblaCarouselType | undefined,\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n  plugins: EmblaPluginType[] = [],\n): UseEmblaCarouselType {\n  const optionsHandler = useRef(EmblaCarousel.optionsHandler())\n  const storedOptions = useRef(options)\n  const storedPlugins = useRef(plugins)\n  const [embla, setEmbla] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n\n  const reInit = useCallback(() => {\n    if (embla) embla.reInit(storedOptions.current, storedPlugins.current)\n  }, [embla])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions\n      const newEmbla = EmblaCarousel(\n        viewport,\n        storedOptions.current,\n        storedPlugins.current,\n      )\n      setEmbla(newEmbla)\n      return () => newEmbla.destroy()\n    } else {\n      setEmbla(undefined)\n    }\n  }, [viewport, setEmbla])\n\n  useEffect(() => {\n    if (optionsHandler.current.areEqual(storedOptions.current, options)) return\n\n    storedOptions.current = options\n    reInit()\n  }, [options, reInit])\n\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return\n\n    storedPlugins.current = plugins\n    reInit()\n  }, [plugins, reInit])\n\n  return [<EmblaViewportRefType>setViewport, embla]\n}\n\nuseEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default useEmblaCarousel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}