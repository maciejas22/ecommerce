{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { clamp, assignRef, useMergedRef, useOs } from '@mantine/hooks';\nimport { rem, useComponentDefaultProps, getSize } from '@mantine/styles';\nimport { getInputMode } from './get-input-mode/get-input-mode.js';\nimport { Chevron } from './Chevron.js';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles.js';\nimport { TextInput } from '../TextInput/TextInput.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultFormatter = value => value || \"\";\nconst defaultParser = num => {\n  if (num === \"-\") {\n    return num;\n  }\n  let tempNum = num;\n  if (tempNum[0] === \".\") {\n    tempNum = `0${num}`;\n  }\n  const parsedNum = parseFloat(tempNum);\n  if (Number.isNaN(parsedNum)) {\n    return \"\";\n  }\n  return num;\n};\nconst CHEVRON_SIZES = {\n  xs: rem(10),\n  sm: rem(14),\n  md: rem(16),\n  lg: rem(18),\n  xl: rem(20)\n};\nconst defaultProps = {\n  step: 1,\n  hideControls: false,\n  size: \"sm\",\n  precision: 0,\n  noClampOnBlur: false,\n  removeTrailingZeros: false,\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: \"text\"\n};\nconst NumberInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"NumberInput\", defaultProps, props),\n    {\n      readOnly,\n      disabled,\n      value,\n      onChange,\n      decimalSeparator,\n      min,\n      max,\n      startValue,\n      step,\n      stepHoldInterval,\n      stepHoldDelay,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n      hideControls,\n      radius,\n      variant,\n      precision,\n      removeTrailingZeros,\n      defaultValue,\n      noClampOnBlur,\n      handlersRef,\n      classNames,\n      styles,\n      size,\n      rightSection,\n      rightSectionWidth,\n      formatter,\n      parser,\n      inputMode,\n      unstyled,\n      type\n    } = _a,\n    others = __objRest(_a, [\"readOnly\", \"disabled\", \"value\", \"onChange\", \"decimalSeparator\", \"min\", \"max\", \"startValue\", \"step\", \"stepHoldInterval\", \"stepHoldDelay\", \"onBlur\", \"onKeyDown\", \"onKeyUp\", \"hideControls\", \"radius\", \"variant\", \"precision\", \"removeTrailingZeros\", \"defaultValue\", \"noClampOnBlur\", \"handlersRef\", \"classNames\", \"styles\", \"size\", \"rightSection\", \"rightSectionWidth\", \"formatter\", \"parser\", \"inputMode\", \"unstyled\", \"type\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"NumberInput\",\n    variant,\n    size\n  });\n  const parsePrecision = val => {\n    if (val === \"\") return \"\";\n    let result = val.toFixed(precision);\n    if (removeTrailingZeros && precision > 0) {\n      result = result.replace(new RegExp(`[0]{0,${precision}}$`), \"\");\n      if (result.endsWith(\".\") || result.endsWith(decimalSeparator)) {\n        result = result.slice(0, -1);\n      }\n    }\n    return result;\n  };\n  const [_value, setValue] = useState(typeof value === \"number\" ? value : typeof defaultValue === \"number\" ? defaultValue : \"\");\n  const finalValue = typeof value === \"number\" ? value : _value;\n  const [tempValue, setTempValue] = useState(typeof finalValue === \"number\" ? parsePrecision(finalValue) : \"\");\n  const inputRef = useRef();\n  const handleValueChange = val => {\n    if (val !== _value && !Number.isNaN(val)) {\n      typeof onChange === \"function\" && onChange(val);\n      setValue(val);\n    }\n  };\n  const formatNum = function () {\n    let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let parsedStr = typeof val === \"number\" ? String(val) : val;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n    return formatter(parsedStr);\n  };\n  const parseNum = val => {\n    let num = val;\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, \"g\"), \".\");\n    }\n    return parser(num);\n  };\n  const _min = typeof min === \"number\" ? min : -Infinity;\n  const _max = typeof max === \"number\" ? max : Infinity;\n  const incrementRef = useRef();\n  incrementRef.current = () => {\n    var _a2, _b, _c;\n    if (_value === \"\") {\n      handleValueChange((_a2 = startValue != null ? startValue : min) != null ? _a2 : 0);\n      setTempValue(startValue ? (_c = (_b = parsePrecision(startValue)) != null ? _b : parsePrecision(min)) != null ? _c : \"0\" : \"0\");\n    } else {\n      const result = parsePrecision(clamp(_value + step, _min, _max));\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n  const decrementRef = useRef();\n  decrementRef.current = () => {\n    var _a2, _b, _c;\n    if (_value === \"\") {\n      handleValueChange((_a2 = startValue != null ? startValue : min) != null ? _a2 : 0);\n      setTempValue(startValue ? (_c = (_b = parsePrecision(startValue)) != null ? _b : parsePrecision(min)) != null ? _c : \"0\" : \"0\");\n    } else {\n      const result = parsePrecision(clamp(_value - step, _min, _max));\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current\n  });\n  useEffect(() => {\n    if (typeof value === \"number\") {\n      setValue(value);\n      setTempValue(parsePrecision(value));\n    }\n    if ((defaultValue === \"\" || defaultValue === void 0) && value === \"\") {\n      setValue(value);\n      setTempValue(\"\");\n    }\n  }, [value, precision]);\n  const shouldUseStepInterval = stepHoldDelay !== void 0 && stepHoldInterval !== void 0;\n  const onStepTimeoutRef = useRef(null);\n  const stepCountRef = useRef(0);\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n  const onStepHandleChange = isIncrement => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n  const onStepLoop = isIncrement => {\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      const interval = typeof stepHoldInterval === \"number\" ? stepHoldInterval : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n  const onStep = (event, isIncrement) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n  const controls = /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.rightSection\n  }, /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue >= max,\n    className: cx(classes.control, classes.controlUp),\n    onPointerDown: event => {\n      onStep(event, true);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: getSize({\n      size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"up\"\n  })), /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue <= min,\n    className: cx(classes.control, classes.controlDown),\n    onPointerDown: event => {\n      onStep(event, false);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: getSize({\n      size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"down\"\n  })));\n  const handleChange = event => {\n    const evt = event.nativeEvent;\n    if (evt.isComposing) {\n      return;\n    }\n    const val = event.target.value;\n    const parsed = parseNum(val);\n    setTempValue(parsed);\n    if (val === \"\" || val === \"-\") {\n      handleValueChange(\"\");\n    } else {\n      val.trim() !== \"\" && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n  const handleBlur = event => {\n    var _a2;\n    if (typeof value === \"number\" || value === \"\") {\n      setTempValue(parsePrecision(value));\n      return;\n    }\n    if (event.target.value === \"\") {\n      setTempValue(\"\");\n      handleValueChange(\"\");\n    } else {\n      let newNumber = event.target.value;\n      if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === \".\") {\n        newNumber = `0${newNumber}`;\n      }\n      const parsedVal = parseNum(newNumber);\n      const val = clamp(parseFloat(parsedVal), _min, _max);\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(parsePrecision(val));\n          handleValueChange(parseFloat(parsePrecision(val)));\n        }\n      } else {\n        setTempValue((_a2 = parsePrecision(finalValue)) != null ? _a2 : \"\");\n      }\n    }\n    typeof onBlur === \"function\" && onBlur(event);\n  };\n  const handleKeyDown = event => {\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n    if (event.repeat && shouldUseStepInterval && (event.key === \"ArrowUp\" || event.key === \"ArrowDown\")) {\n      event.preventDefault();\n      return;\n    }\n    if (!readOnly) {\n      if (event.key === \"ArrowUp\") {\n        onStep(event, true);\n      } else if (event.key === \"ArrowDown\") {\n        onStep(event, false);\n      }\n    }\n  };\n  const handleKeyUp = event => {\n    typeof onKeyUp === \"function\" && onKeyUp(event);\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      onStepDone();\n    }\n  };\n  return /* @__PURE__ */React.createElement(TextInput, __spreadProps(__spreadValues({}, others), {\n    type,\n    variant,\n    value: formatNum(tempValue),\n    disabled,\n    readOnly,\n    ref: useMergedRef(inputRef, ref),\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    rightSection: rightSection || (disabled || readOnly || hideControls || variant === \"unstyled\" ? null : controls),\n    rightSectionWidth: rightSectionWidth != null ? rightSectionWidth : `calc(${getSize({\n      size,\n      sizes: CONTROL_SIZES\n    })} + ${rem(1)})`,\n    radius,\n    max,\n    min,\n    step,\n    size,\n    styles,\n    classNames,\n    inputMode: inputMode || getInputMode(step, precision, useOs()),\n    __staticSelector: \"NumberInput\",\n    unstyled\n  }));\n});\nNumberInput.displayName = \"@mantine/core/NumberInput\";\nexport { NumberInput };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFormatter","defaultParser","num","tempNum","parsedNum","parseFloat","Number","isNaN","CHEVRON_SIZES","xs","rem","sm","md","lg","xl","defaultProps","step","hideControls","size","precision","noClampOnBlur","removeTrailingZeros","formatter","parser","type","NumberInput","forwardRef","props","ref","_a","useComponentDefaultProps","readOnly","disabled","onChange","decimalSeparator","min","max","startValue","stepHoldInterval","stepHoldDelay","onBlur","onKeyDown","onKeyUp","radius","variant","defaultValue","handlersRef","classNames","styles","rightSection","rightSectionWidth","inputMode","unstyled","others","classes","cx","useStyles","name","parsePrecision","val","result","toFixed","replace","RegExp","endsWith","slice","_value","setValue","useState","finalValue","tempValue","setTempValue","inputRef","useRef","handleValueChange","formatNum","arguments","length","undefined","parsedStr","String","parseNum","_min","Infinity","_max","incrementRef","current","_a2","_b","_c","clamp","decrementRef","assignRef","increment","decrement","useEffect","shouldUseStepInterval","onStepTimeoutRef","stepCountRef","onStepDone","window","clearTimeout","onStepHandleChange","isIncrement","onStepLoop","interval","setTimeout","onStep","event","preventDefault","focus","controls","React","createElement","className","tabIndex","control","controlUp","onPointerDown","onPointerUp","onPointerLeave","Chevron","getSize","sizes","direction","controlDown","handleChange","evt","nativeEvent","isComposing","parsed","trim","handleBlur","newNumber","parsedVal","handleKeyDown","repeat","handleKeyUp","TextInput","useMergedRef","CONTROL_SIZES","getInputMode","useOs","__staticSelector","displayName"],"sources":["C:\\Users\\Maciej\\Desktop\\projekt_indywidualny\\shop\\frontend\\node_modules\\@mantine\\core\\src\\NumberInput\\NumberInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useMergedRef, assignRef, useOs, clamp } from '@mantine/hooks';\nimport { DefaultProps, Selectors, useComponentDefaultProps, rem, getSize } from '@mantine/styles';\nimport { TextInput } from '../TextInput';\nimport { InputStylesNames, InputWrapperStylesNames } from '../Input';\nimport { getInputMode } from './get-input-mode/get-input-mode';\nimport { Chevron } from './Chevron';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles';\n\nexport type InnerNumberInputStylesNames = Selectors<typeof useStyles>;\nexport type NumberInputStylesNames =\n  | InputStylesNames\n  | InputWrapperStylesNames\n  | InnerNumberInputStylesNames;\n\nexport interface NumberInputHandlers {\n  increment(): void;\n  decrement(): void;\n}\n\ntype Formatter = (value: string | '') => string;\ntype Parser = (value: string | '') => string;\n\nexport interface NumberInputProps\n  extends DefaultProps<NumberInputStylesNames>,\n    Omit<\n      React.ComponentPropsWithoutRef<typeof TextInput>,\n      'onChange' | 'value' | 'classNames' | 'styles' | 'type'\n    > {\n  /** Called when value changes */\n  onChange?(value: number | ''): void;\n\n  /** Input value for controlled component */\n  value?: number | '';\n\n  /** Default value for uncontrolled component */\n  defaultValue?: number | '';\n\n  /** The decimal separator */\n  decimalSeparator?: string;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** First value if no initial value was set and increment/decrement is triggered using controls or up/down arrows */\n  startValue?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Only works if a precision is given, removes the trailing zeros, false by default */\n  removeTrailingZeros?: boolean;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n\n  /** Get increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Formats the number into the input */\n  formatter?: Formatter;\n\n  /** Parses the value from formatter, should be used with formatter at the same time */\n  parser?: Parser;\n\n  /** Input type, defaults to text */\n  type?: 'text' | 'number';\n}\n\nconst defaultFormatter: Formatter = (value) => value || '';\nconst defaultParser: Parser = (num) => {\n  if (num === '-') {\n    return num;\n  }\n\n  let tempNum = num;\n\n  if (tempNum[0] === '.') {\n    tempNum = `0${num}`;\n  }\n\n  const parsedNum = parseFloat(tempNum);\n\n  if (Number.isNaN(parsedNum)) {\n    return '';\n  }\n\n  return num;\n};\n\nconst CHEVRON_SIZES = {\n  xs: rem(10),\n  sm: rem(14),\n  md: rem(16),\n  lg: rem(18),\n  xl: rem(20),\n};\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  hideControls: false,\n  size: 'sm',\n  precision: 0,\n  noClampOnBlur: false,\n  removeTrailingZeros: false,\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: 'text',\n};\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>((props, ref) => {\n  const {\n    readOnly,\n    disabled,\n    value,\n    onChange,\n    decimalSeparator,\n    min,\n    max,\n    startValue,\n    step,\n    stepHoldInterval,\n    stepHoldDelay,\n    onBlur,\n    onKeyDown,\n    onKeyUp,\n    hideControls,\n    radius,\n    variant,\n    precision,\n    removeTrailingZeros,\n    defaultValue,\n    noClampOnBlur,\n    handlersRef,\n    classNames,\n    styles,\n    size,\n    rightSection,\n    rightSectionWidth,\n    formatter,\n    parser,\n    inputMode,\n    unstyled,\n    type,\n    ...others\n  } = useComponentDefaultProps('NumberInput', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { radius },\n    { classNames, styles, unstyled, name: 'NumberInput', variant, size }\n  );\n\n  const parsePrecision = (val: number | '') => {\n    if (val === '') return '';\n\n    let result = val.toFixed(precision);\n    if (removeTrailingZeros && precision > 0) {\n      result = result.replace(new RegExp(`[0]{0,${precision}}$`), '');\n      if (result.endsWith('.') || result.endsWith(decimalSeparator)) {\n        result = result.slice(0, -1);\n      }\n    }\n\n    return result;\n  };\n\n  const [_value, setValue] = useState<number | ''>(\n    typeof value === 'number' ? value : typeof defaultValue === 'number' ? defaultValue : ''\n  );\n  const finalValue = typeof value === 'number' ? value : _value;\n  const [tempValue, setTempValue] = useState(\n    typeof finalValue === 'number' ? parsePrecision(finalValue) : ''\n  );\n  const inputRef = useRef<HTMLInputElement>();\n  const handleValueChange = (val: number | '') => {\n    if (val !== _value && !Number.isNaN(val)) {\n      typeof onChange === 'function' && onChange(val);\n      setValue(val);\n    }\n  };\n\n  const formatNum = (val: string | number = '') => {\n    let parsedStr = typeof val === 'number' ? String(val) : val;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n\n    return formatter(parsedStr);\n  };\n\n  const parseNum = (val: string): string | '' => {\n    let num = val;\n\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.');\n    }\n\n    return parser(num);\n  };\n\n  const _min = typeof min === 'number' ? min : -Infinity;\n  const _max = typeof max === 'number' ? max : Infinity;\n\n  const incrementRef = useRef<() => void>();\n  incrementRef.current = () => {\n    if (_value === '') {\n      handleValueChange(startValue ?? min ?? 0);\n      setTempValue(startValue ? parsePrecision(startValue) ?? parsePrecision(min) ?? '0' : '0');\n    } else {\n      const result = parsePrecision(clamp(_value + step, _min, _max));\n\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  const decrementRef = useRef<() => void>();\n  decrementRef.current = () => {\n    if (_value === '') {\n      handleValueChange(startValue ?? min ?? 0);\n      setTempValue(startValue ? parsePrecision(startValue) ?? parsePrecision(min) ?? '0' : '0');\n    } else {\n      const result = parsePrecision(clamp(_value - step, _min, _max));\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      setValue(value);\n      setTempValue(parsePrecision(value));\n    }\n    if ((defaultValue === '' || defaultValue === undefined) && value === '') {\n      setValue(value);\n      setTempValue('');\n    }\n  }, [value, precision]);\n\n  const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n  const onStepTimeoutRef = useRef<number>(null);\n  const stepCountRef = useRef<number>(0);\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const onStepHandleChange = (isIncrement: boolean) => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = (isIncrement: boolean) => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval =\n        typeof stepHoldInterval === 'number'\n          ? stepHoldInterval\n          : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (\n    event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    isIncrement: boolean\n  ) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n\n  const controls = (\n    <div className={classes.rightSection}>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={finalValue >= max}\n        className={cx(classes.control, classes.controlUp)}\n        onPointerDown={(event) => {\n          onStep(event, true);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={getSize({ size, sizes: CHEVRON_SIZES })} direction=\"up\" />\n      </button>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={finalValue <= min}\n        className={cx(classes.control, classes.controlDown)}\n        onPointerDown={(event) => {\n          onStep(event, false);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={getSize({ size, sizes: CHEVRON_SIZES })} direction=\"down\" />\n      </button>\n    </div>\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const evt = event.nativeEvent as InputEvent;\n    if (evt.isComposing) {\n      return;\n    }\n\n    const val = event.target.value;\n    const parsed = parseNum(val);\n\n    setTempValue(parsed);\n\n    if (val === '' || val === '-') {\n      handleValueChange('');\n    } else {\n      val.trim() !== '' && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (typeof value === 'number' || value === '') {\n      setTempValue(parsePrecision(value));\n      return;\n    }\n\n    if (event.target.value === '') {\n      setTempValue('');\n      handleValueChange('');\n    } else {\n      let newNumber = event.target.value;\n\n      if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === '.') {\n        newNumber = `0${newNumber}`;\n      }\n\n      const parsedVal = parseNum(newNumber);\n      const val = clamp(parseFloat(parsedVal), _min, _max);\n\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(parsePrecision(val));\n          handleValueChange(parseFloat(parsePrecision(val)));\n        }\n      } else {\n        setTempValue(parsePrecision(finalValue) ?? '');\n      }\n    }\n\n    typeof onBlur === 'function' && onBlur(event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyDown === 'function' && onKeyDown(event);\n    if (\n      event.repeat &&\n      shouldUseStepInterval &&\n      (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n    ) {\n      event.preventDefault();\n      return;\n    }\n    if (!readOnly) {\n      if (event.key === 'ArrowUp') {\n        onStep(event, true);\n      } else if (event.key === 'ArrowDown') {\n        onStep(event, false);\n      }\n    }\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyUp === 'function' && onKeyUp(event);\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      onStepDone();\n    }\n  };\n\n  return (\n    <TextInput\n      {...others}\n      type={type}\n      variant={variant}\n      value={formatNum(tempValue)}\n      disabled={disabled}\n      readOnly={readOnly}\n      ref={useMergedRef(inputRef, ref)}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      rightSection={\n        rightSection ||\n        (disabled || readOnly || hideControls || variant === 'unstyled' ? null : controls)\n      }\n      rightSectionWidth={\n        rightSectionWidth ?? `calc(${getSize({ size, sizes: CONTROL_SIZES })} + ${rem(1)})`\n      }\n      radius={radius}\n      max={max}\n      min={min}\n      step={step}\n      size={size}\n      styles={styles}\n      classNames={classNames}\n      inputMode={inputMode || getInputMode(step, precision, useOs())}\n      __staticSelector=\"NumberInput\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}